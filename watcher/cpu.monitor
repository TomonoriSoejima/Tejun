POST _watcher/watch/_execute
{
  "watch": {
    "trigger": {
      "schedule": {
        "interval": "5m"
      }
    },
    "input": {
      "http": {
        "request": {
          "host": "localhost",
          "port": 9200,
          "path": "_nodes/stats/os?format=json"
        }
      }
    },
    "metadata": {
      "cpu_usage": 1,
      "node1" : "vYmAUQ0CQE2dvYW0BnuUEA",
      "node2" : "TfBZg2EsTs-9uSJhG-Bhcg",
      "node3" : "Paj39SxiSPCz8SKS42kbcA"
    },
    "condition": {
      "script": {
        "source": """
          def cpu_node1 = ctx.payload.nodes[ctx.metadata.node1].os.cpu.percent;
          def cpu_node2 = ctx.payload.nodes[ctx.metadata.node2].os.cpu.percent;
          def cpu_node3 = ctx.payload.nodes[ctx.metadata.node3].os.cpu.percent;
        
          return cpu_node1 > ctx.metadata.cpu_usage || cpu_node2 > ctx.metadata.cpu_usage || cpu_node3 > ctx.metadata.cpu_usage;
        """
      }
    },
    "actions": {
      "log": {
        "transform": {
          "script": {
            "source": """
              def cpu_high_nodes = new ArrayList();
              def separator = ' : ';
              def cpu_node1 = ctx.payload.nodes[ctx.metadata.node1].os.cpu.percent;
              def cpu_node2 = ctx.payload.nodes[ctx.metadata.node2].os.cpu.percent;
              def cpu_node3 = ctx.payload.nodes[ctx.metadata.node3].os.cpu.percent;
        
              if (cpu_node1 > ctx.metadata.cpu_usage) {
                cpu_high_nodes.add((String) ctx.metadata.node1 + separator + ctx.payload.nodes[ctx.metadata.node1].os.cpu.percent);
              }
              
              if (cpu_node2 > ctx.metadata.cpu_usage) {
                cpu_high_nodes.add((String) ctx.metadata.node2 + separator + ctx.payload.nodes[ctx.metadata.node2].os.cpu.percent);
              }
              
              if (cpu_node3 > ctx.metadata.cpu_usage) {
                cpu_high_nodes.add((String) ctx.metadata.node3 + separator + ctx.payload.nodes[ctx.metadata.node3].os.cpu.percent);
              }
              
              return ['cpu_high_nodes' : cpu_high_nodes ];
            """,
            "lang": "painless"
          }
        },
        "logging": {
          "text": """
            cpu high usage alert
            
            host : cpu usage
            {{#ctx.payload.cpu_high_nodes}}
            {{.}} percent
            {{/ctx.payload.cpu_high_nodes}}
          """
        }
      }
    }
  }
}
