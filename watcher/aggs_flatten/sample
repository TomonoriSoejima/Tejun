PUT _xpack/watcher/watch/josh
{
  "trigger": {
    "schedule": {
      "interval": "5m"
    }
  },
  "input": {
    "search": {
      "request": {
        "indices": [
          "hotel"
        ],
        "body": {
          "aggs": {
            "country": {
              "terms": {
                "field": "country.keyword",
                "size": 3
              },
              "aggs": {
                "city": {
                  "terms": {
                    "field": "city.keyword",
                    "size": 3
                  },
                  "aggs": {
                    "max_price": {
                      "max": {
                        "field": "price"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "log": {
      "logging": {
        "text": """
                {{#ctx.payload.fqcn}} 
        {{.}}
          {{/ctx.payload.fqcn}} 
          """
      }
    }
    
  },
    "transform": {
    "script": {
      "source": """
      def countries_list = ctx.payload.aggregations.country.buckets;
      def cities_list = new ArrayList();
      def fqcn = new ArrayList();
      
      
      for (int i = 0; i < countries_list.size(); i++) {
        def city = countries_list[i].city.buckets;
        
        for (int j = 0; j < city.size(); j++) {
        
          def city_name = city[j].key;
          def country_name = countries_list[i].key;
           fqcn.add(country_name + "." + city_name);
        }
        

      } 
      
      
      return ['fqcn' : fqcn];

      """,
      "lang": "painless"
    }
  }
}


POST _xpack/watcher/watch/josh/_execute

**sample output**

      "condition": {
        "type": "always",
        "status": "success",
        "met": true
      },
      "transform": {
        "type": "script",
        "status": "success",
        "payload": {
          "fqcn": [
            "INDIA.Nara",
            "INDIA.Osaka",
            "INDIA.Tokyo",
            "Mexico.Kyoto",
            "Mexico.Nara",
            "Mexico.Tokyo",
            "FRANCE.Nara",
            "FRANCE.Kyoto",
            "FRANCE.Osaka"
          ]
        }
      },
      "actions": [
        {
          "id": "log",
          "type": "logging",
          "status": "success",
          "logging": {
            "logged_text": """
         INDIA.Nara
         INDIA.Osaka
         INDIA.Tokyo
         Mexico.Kyoto
         Mexico.Nara
         Mexico.Tokyo
         FRANCE.Nara
         FRANCE.Kyoto
         FRANCE.Osaka
 
"""
          }
        }
      ]
    },

