PUT _xpack/watcher/watch/mwatch
{
  "trigger": {
    "schedule": {
      "interval": "5m"
    }
  },
  "input": {
    "search": {
      "request": {
        "indices": [
          ".ml-anomalies-*"
        ],
        "body": {
          "query": {
            "bool": {
              "filter": [
                {
                  "range": {
                    "timestamp": {
                      "gte": "now-2y"
                    }
                  }
                },
                {
                  "term": {
                    "result_type": "bucket"
                  }
                },
                {
                  "range": {
                    "anomaly_score": {
                      "gte": "75"
                    }
                  }
                }
              ],
              "should": [
                {
                  "term": {
                    "job_id": "user"
                  }
                },
                {
                  "term": {
                    "job_id": "user2"
                  }
                },
                {
                  "term": {
                    "job_id": "user3"
                  }
                },
                {
                  "term": {
                    "job_id": "user4"
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "condition": {
    "script": {
      "source": "def list = []; def total =  ctx.payload.hits.hits.size(); for (int i = 0; i < total; ++i) { list.add(ctx.payload.hits.hits[i]._source.job_id); } if (list[3] == 'user3') {return true } else {return false} "
    }
  },
  "actions": {
    "log": {
      "logging": {
        "text": """
Anomalies:
{{#ctx.payload.hits.hits}}score={{_source.anomaly_score}} at score={{_source.job_id}} at time={{_source.timestamp}}
{{/ctx.payload.hits.hits}}
"""
      }
    }
  }
}
